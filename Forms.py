import streamlit as st
from datetime import date
import streamlit.components.v1 as components
import streamlit_js_eval
import pandas as pd
import os

st.set_page_config(page_title="Formul√°rio de Inspe√ß√£o", layout="centered")

st.title("üìã Formul√°rio de Inspe√ß√£o")

# 1 - Data
data_inicio = st.date_input("1Ô∏è‚É£ Insira a data de in√≠cio da inspe√ß√£o", date.today())

# 2 - Nome
nome = st.text_input("2Ô∏è‚É£ Insira seu nome")

# 3 - Localiza√ß√£o autom√°tica via navegador
st.markdown("### 3Ô∏è‚É£ Local da inspe√ß√£o")
components.html("""
<script>
navigator.geolocation.getCurrentPosition(
  function(position) {
    const lat = position.coords.latitude;
    const lon = position.coords.longitude;
    const coord = lat + "," + lon;
    window.parent._lastCoord = coord;
    window.parent.postMessage({type: 'coords', data: coord}, "*");
  },
  function(error) {
    window.parent._lastCoord = 'Erro ao obter localiza√ß√£o';
    window.parent.postMessage({type: 'coords', data: 'Erro ao obter localiza√ß√£o'}, "*");
  }
);
</script>
""", height=0)

coords = st.empty()

# Captura coordenada do navegador
coord_val = streamlit_js_eval.streamlit_js_eval(js_expressions="parent.window._lastCoord", key="get_coords")
if coord_val and isinstance(coord_val, str) and ',' in coord_val:
    coords.write(f"üìç Localiza√ß√£o detectada: {coord_val}")
else:
    coords.write("üîç Aguardando localiza√ß√£o...")

# 4 - Condi√ß√µes
st.markdown("### 4Ô∏è‚É£ O local apresenta boas condi√ß√µes?")
condicao = st.radio("Selecione uma op√ß√£o:", ["Sim", "N√£o"])

# Se n√£o estiver ok
if condicao == "N√£o":
    st.file_uploader("üì∏ Tire ou envie uma foto do local", type=["png", "jpg", "jpeg"])
    motivo = st.text_area("üìù Descreva o motivo")
else:
    motivo = ""

# 5 - Enviar formul√°rio
if st.button("‚úÖ Enviar formul√°rio"):
    st.success("Formul√°rio enviado com sucesso!")
    st.write("### Resumo da Inspe√ß√£o:")
    st.write(f"**Data:** {data_inicio}")
    st.write(f"**Nome:** {nome}")
    st.write(f"**Localiza√ß√£o:** {coord_val if coord_val else 'N√£o capturada'}")
    st.write(f"**Condi√ß√µes:** {condicao}")
    if condicao == "N√£o":
        st.write(f"**Motivo:** {motivo if motivo else 'N√£o preenchido'}")

    # üîΩ SALVAR DADOS NO CSV
    dados = {
        "Data": [data_inicio],
        "Nome": [nome],
        "Localiza√ß√£o": [coord_val],
        "Condi√ß√µes": [condicao],
        "Motivo": [motivo]
    }

    df = pd.DataFrame(dados)

    if not os.path.exists("respostas.csv"):
        df.to_csv("respostas.csv", index=False)
    else:
        df.to_csv("respostas.csv", mode='a', header=False, index=False)

# =========================
# üîê DOWNLOAD COM SENHA
# =========================
st.markdown("---")
st.markdown("## üì• Relat√≥rio de Inspe√ß√µes")

if st.button("üîê Baixar relat√≥rio (acesso restrito)"):
    with st.expander("üîë Digite a senha para continuar"):
        senha = st.text_input("Senha:", type="password")
        senha_correta = "minhasenha123"  # Altere conforme necess√°rio

        if senha == senha_correta:
            if os.path.exists("respostas.csv"):
                df = pd.read_csv("respostas.csv")
                st.success("‚úÖ Acesso liberado! Voc√™ pode baixar o relat√≥rio abaixo:")
                st.download_button(
                    label="üì• Baixar CSV",
                    data=df.to_csv(index=False).encode("utf-8"),
                    file_name="relatorio_inspecao.csv",
                    mime="text/csv"
                )
            else:
                st.warning("‚ö†Ô∏è Nenhum dado foi registrado ainda.")
        elif senha != "":
            st.error("‚ùå Senha incorreta. Tente novamente.")


